#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

SCRIPT=$(basename "$0")
CLIENT=$1
VERSION=$2

CURRENT_DIR=$(pwd)
CHECKOUT_DIR=$(mktemp -d)

finish() {
    # clean up temporary checkout directory
    rm -rf "$CHECKOUT_DIR"
    # return to previous working directory
    cd "$CURRENT_DIR"
}
trap finish EXIT

REPO="https://github.com/cybercryptio/d1-service-${CLIENT}.git"
TARGET="d1-${CLIENT}"

CLIENT_DIR=$(realpath "$TARGET")
CLIENT_PROTOBUF_DIR=$CLIENT_DIR/protobuf

# prepare target directories
rm -rf "$CLIENT_DIR"
mkdir "$CLIENT_DIR"
mkdir "$CLIENT_PROTOBUF_DIR"

# checkout service repo
rm -rf "$CHECKOUT_DIR"
git clone "$REPO" "$CHECKOUT_DIR"
cd "$CHECKOUT_DIR"
git fetch --quiet --tags
git checkout --quiet "$VERSION"
COMMIT_ID=$(git rev-parse HEAD)
SRC_DIR=$(pwd)

# sed_replace creates a sed expression that can be used to replace
# occurences of $1 with $2.
sed_replace() {
    OLD_VALUE=$1
    NEW_VALUE=$2
    echo "s|${OLD_VALUE}|${NEW_VALUE}|g"
}

# remove_copyright_comments reads Go source code as text from STDIN,
# replaces all occurences of copyright comments, and writes the result to STDOUT.
remove_copyright_comments() {
    sed -e "$(sed_replace '// Copyright .* CYBERCRYPT' '')"
}

# fix_go_imports reads Go source code as text from STDIN,
# replaces occurences of go imports targeting the service repos with imports
# to the client repo, and writes the result to STDOUT.
fix_go_imports() {
    sed -e "
        $(sed_replace 'd1-service-generic/client'   'd1-client-go/d1-generic'           ) ;
        $(sed_replace 'd1-service-generic/protobuf' 'd1-client-go/d1-generic/protobuf'  ) ;
        $(sed_replace 'd1-service-storage/client'   'd1-client-go/d1-storage'           ) ;
        $(sed_replace 'd1-service-storage/protobuf' 'd1-client-go/d1-storage/protobuf'  ) ;
    "
}

# fix_client_source reads Go client source code as reads text from STDIN,
# applies the following adjustments and writes the result to STDOUT:
# - Prepends an Apache license header
# - Prepends a DO NOT EDIT reminder with source information
# - Removes existing copyright comments
# - Replaces various Go imports to make it work from the new location
fix_client_source() {
    # output an Apache license header and a "DO NOT EDIT" reminder.
    cat << EOF
// Copyright 2022 CYBERCRYPT
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by ${SCRIPT}. DO NOT EDIT.
// version: ${VERSION}
// source: ${REPO}
// commit: ${COMMIT_ID}

EOF

    remove_copyright_comments | fix_go_imports
}

# copy and process client source files
cd "${SRC_DIR}/client"
GO_FILES=$(find . -name \*.go)
for GO_FILE in $GO_FILES; do
    SRC_PATH=$(realpath "$GO_FILE")
    DST_PATH=$(realpath --canonicalize-missing "${CLIENT_DIR}/${GO_FILE}")
    DST_DIR=$(dirname "$DST_PATH")
    mkdir -p "$DST_DIR"
    fix_client_source < "$SRC_PATH" > "$DST_PATH"
done

# copy and process protobuf source files
cd "${SRC_DIR}/protobuf"
GO_FILES=$(find . -name \*.go)
for GO_FILE in $GO_FILES; do
    SRC_PATH=$(realpath "$GO_FILE")
    DST_PATH=$(realpath --canonicalize-missing "${CLIENT_PROTOBUF_DIR}/${GO_FILE}")
    DST_DIR=$(dirname "$DST_PATH")
    mkdir -p "$DST_DIR"
    fix_go_imports < "$SRC_PATH" > "$DST_PATH"
done

# Fix source code formatting
gofmt -w "$CLIENT_DIR"

cd "$CURRENT_DIR"
go mod tidy

COLOR_GREEN='\033[0;32m'
COLOR_NONE='\033[0m'
MESSAGE="Client '${TARGET}' is now running version '${VERSION} (${COMMIT_ID})'"
echo -e "${COLOR_GREEN}${MESSAGE}${COLOR_NONE}"
